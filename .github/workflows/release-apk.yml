name: Build and Release APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 35
          build-tools: 35.0.1
          components: platform-tools

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Setup Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > release.keystore
          echo "storeFile=release.keystore" > keystore.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> keystore.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> keystore.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> keystore.properties

      - name: Get versionName from Gradle
        id: version
        run: |
          VERSION_NAME=$(./gradlew -q printVersionName)
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV

      - name: Build Release APK
        run: ./gradlew clean assembleRelease --stacktrace

      - name: Rename APK with versionName
        run: |
          APK_DIR=app/build/outputs/apk/release
          mv $APK_DIR/app-release.apk $APK_DIR/animeapp_${{ env.VERSION_NAME }}.apk

      - name: Create Git Tag
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag -a "v${{ env.VERSION_NAME }}" -m "Release version ${{ env.VERSION_NAME }}"
          git push origin "v${{ env.VERSION_NAME }}"

      - name: Upload APK to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ env.VERSION_NAME }}"
          files: app/build/outputs/apk/release/animeapp_${{ env.VERSION_NAME }}.apk
          name: "AnimeApp Release ${{ env.VERSION_NAME }}"
          body: "Automated release from GitHub Actions."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
